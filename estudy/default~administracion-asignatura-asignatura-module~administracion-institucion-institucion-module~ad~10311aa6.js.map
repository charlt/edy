{"version":3,"sources":["webpack:///./node_modules/ngx-file-drop/fesm5/ngx-file-drop.js","webpack:///./src/app/router.animations.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACwH;AACtG;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,gCAAgC,2BAA2B,KAAK,gCAAgC;AAChG,yCAAyC,8BAA8B,KAAK;AAC5E,4BAA4B,uBAAuB;AACnD;AACA;AACA,gCAAgC,2BAA2B,KAAK,gCAAgC;AAChG,yCAAyC,8BAA8B,KAAK;AAC5E,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS,UAAU,0CAA0C;AAC7E;AACA;AACA,sEAAsE;AACtE,SAAS,OAAO,yDAAW;AAC3B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE,2CAA2C,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA,iDAAiD,EAAE;AACnD,yBAAyB;AACzB;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA,0CAA0C,kDAAK;AAC/C;AACA,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,2CAA2C,EAAE;AAC7C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,iCAAiC;AACjC;AACA,2CAA2C,sBAAsB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,0CAA0C,EAAE;AAC5C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,i7BAAi7B,eAAe,6HAA6H,gBAAgB,yNAAyN,qCAAqC;AAC30C,wDAAwD,aAAa,YAAY,0BAA0B,mBAAmB,gCAAgC,sCAAsC,wBAAwB,aAAa,mBAAmB,uBAAuB,aAAa,cAAc,gCAAgC,kBAAkB,2BAA2B,aAAa;AACxY,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,OAAO,uDAAS;AACzB,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,oBAAoB,OAAO,mDAAK,EAAE;AAClC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,0BAA0B,OAAO,mDAAK,EAAE;AACxC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,2BAA2B,OAAO,0DAAY,+CAA+C,OAAO,yDAAW,iBAAiB,IAAI;AACpI,wBAAwB,OAAO,uDAAS,0BAA0B,eAAe,IAAI;AACrF;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEgH;;AAEhH,yC;;;;;;;;;;;;AC7iBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAE1E,SAAS,gBAAgB;IAE5B,OAAO,YAAY,EAAE,CAAC;AAC1B,CAAC;AAEM,SAAS,YAAY;IACxB,OAAO,mEAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;AAC3C,CAAC;AAEM,SAAS,YAAY;IACxB,OAAO,mEAAO,CAAC,kBAAkB,EAAE;QAC/B,iEAAK,CAAC,MAAM,EAAE,iEAAK,CAAC,EAAE,CAAC,CAAC;QACxB,iEAAK,CAAC,GAAG,EAAE,iEAAK,CAAC,EAAE,CAAC,CAAC;QACrB,sEAAU,CAAC,QAAQ,EAAE;YACjB,iEAAK,CAAC,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC;YACzC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC,CAAC;SACtE,CAAC;QACF,sEAAU,CAAC,QAAQ,EAAE;YACjB,iEAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;YACtC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC,CAAC;SACxE,CAAC;KACL,CAAC,CAAC;AACP,CAAC;AAEM,SAAS,WAAW;IACvB,OAAO,mEAAO,CAAC,kBAAkB,EAAE;QAC/B,iEAAK,CAAC,MAAM,EAAE,iEAAK,CAAC,EAAE,CAAC,CAAC;QACxB,iEAAK,CAAC,GAAG,EAAE,iEAAK,CAAC,EAAE,CAAC,CAAC;QACrB,sEAAU,CAAC,QAAQ,EAAE;YACjB,iEAAK,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;YACxC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC,CAAC;SACtE,CAAC;QACF,sEAAU,CAAC,QAAQ,EAAE;YACjB,iEAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;YACtC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC,CAAC;SACzE,CAAC;KACL,CAAC,CAAC;AACP,CAAC;AAEM,SAAS,aAAa;IACzB,OAAO,mEAAO,CAAC,kBAAkB,EAAE;QAC/B,iEAAK,CAAC,MAAM,EAAE,iEAAK,CAAC,EAAE,CAAC,CAAC;QACxB,iEAAK,CAAC,GAAG,EAAE,iEAAK,CAAC,EAAE,CAAC,CAAC;QACrB,sEAAU,CAAC,QAAQ,EAAE;YACjB,iEAAK,CAAC,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC;YACzC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC,CAAC;SACtE,CAAC;QACF,sEAAU,CAAC,QAAQ,EAAE;YACjB,iEAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;YACtC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC,CAAC;SACxE,CAAC;KACL,CAAC,CAAC;AACP,CAAC;AAEM,SAAS,UAAU;IACtB,OAAO,mEAAO,CAAC,kBAAkB,EAAE;QAC/B,iEAAK,CAAC,MAAM,EAAE,iEAAK,CAAC,EAAE,CAAC,CAAC;QACxB,iEAAK,CAAC,GAAG,EAAE,iEAAK,CAAC,EAAE,CAAC,CAAC;QACrB,sEAAU,CAAC,QAAQ,EAAE;YACjB,iEAAK,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;YACxC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC,CAAC;SACtE,CAAC;QACF,sEAAU,CAAC,QAAQ,EAAE;YACjB,iEAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;YACtC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC,CAAC;SACzE,CAAC;KACL,CAAC,CAAC;AACP,CAAC","file":"default~administracion-asignatura-asignatura-module~administracion-institucion-institucion-module~ad~10311aa6.js","sourcesContent":["import { timer } from 'rxjs';\nimport { Directive, TemplateRef, Component, ContentChild, EventEmitter, Input, NgZone, Output, Renderer2, ViewChild, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * fileEntry is an instance of {\\@link FileSystemFileEntry} or {\\@link FileSystemDirectoryEntry}.\r\n * Which one is it can be checked using {\\@link FileSystemEntry.isFile} or {\\@link FileSystemEntry.isDirectory}\r\n * properties of the given {\\@link FileSystemEntry}.\r\n */\r\nvar  /**\r\n * fileEntry is an instance of {\\@link FileSystemFileEntry} or {\\@link FileSystemDirectoryEntry}.\r\n * Which one is it can be checked using {\\@link FileSystemEntry.isFile} or {\\@link FileSystemEntry.isDirectory}\r\n * properties of the given {\\@link FileSystemEntry}.\r\n */\r\nNgxFileDropEntry = /** @class */ (function () {\r\n    function NgxFileDropEntry(relativePath, fileEntry) {\r\n        this.relativePath = relativePath;\r\n        this.fileEntry = fileEntry;\r\n    }\r\n    return NgxFileDropEntry;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxFileDropContentTemplateDirective = /** @class */ (function () {\r\n    function NgxFileDropContentTemplateDirective(template) {\r\n        this.template = template;\r\n    }\r\n    NgxFileDropContentTemplateDirective.decorators = [\r\n        { type: Directive, args: [{ selector: '[ngx-file-drop-content-tmp]' },] }\r\n    ];\r\n    /** @nocollapse */\r\n    NgxFileDropContentTemplateDirective.ctorParameters = function () { return [\r\n        { type: TemplateRef }\r\n    ]; };\r\n    return NgxFileDropContentTemplateDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxFileDropComponent = /** @class */ (function () {\r\n    function NgxFileDropComponent(zone, renderer) {\r\n        var _this = this;\r\n        this.zone = zone;\r\n        this.renderer = renderer;\r\n        this.accept = '*';\r\n        this.directory = false;\r\n        this.multiple = true;\r\n        this.dropZoneLabel = '';\r\n        this.dropZoneClassName = 'ngx-file-drop__drop-zone';\r\n        this.contentClassName = 'ngx-file-drop__content';\r\n        this.showBrowseBtn = false;\r\n        this.browseBtnClassName = 'btn btn-primary btn-xs ngx-file-drop__browse-btn';\r\n        this.browseBtnLabel = 'Browse files';\r\n        this.onFileDrop = new EventEmitter();\r\n        this.onFileOver = new EventEmitter();\r\n        this.onFileLeave = new EventEmitter();\r\n        this.isDraggingOverDropZone = false;\r\n        this.globalDraggingInProgress = false;\r\n        this.files = [];\r\n        this.numOfActiveReadEntries = 0;\r\n        this.helperFormEl = null;\r\n        this.fileInputPlaceholderEl = null;\r\n        this.dropEventTimerSubscription = null;\r\n        this._disabled = false;\r\n        this.openFileSelector = (/**\r\n         * @param {?=} event\r\n         * @return {?}\r\n         */\r\n        function (event) {\r\n            if (_this.fileSelector && _this.fileSelector.nativeElement) {\r\n                ((/** @type {?} */ (_this.fileSelector.nativeElement))).click();\r\n            }\r\n        });\r\n        this.globalDragStartListener = this.renderer.listen('document', 'dragstart', (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            _this.globalDraggingInProgress = true;\r\n        }));\r\n        this.globalDragEndListener = this.renderer.listen('document', 'dragend', (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            _this.globalDraggingInProgress = false;\r\n        }));\r\n    }\r\n    Object.defineProperty(NgxFileDropComponent.prototype, \"disabled\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () { return this._disabled; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._disabled = (value != null && \"\" + value !== 'false');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.dropEventTimerSubscription) {\r\n            this.dropEventTimerSubscription.unsubscribe();\r\n            this.dropEventTimerSubscription = null;\r\n        }\r\n        this.globalDragStartListener();\r\n        this.globalDragEndListener();\r\n        this.files = [];\r\n        this.helperFormEl = null;\r\n        this.fileInputPlaceholderEl = null;\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.onDragOver = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        if (!this.isDropzoneDisabled()) {\r\n            if (!this.isDraggingOverDropZone) {\r\n                this.isDraggingOverDropZone = true;\r\n                this.onFileOver.emit(event);\r\n            }\r\n            this.preventAndStop(event);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.onDragLeave = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        if (!this.isDropzoneDisabled()) {\r\n            if (this.isDraggingOverDropZone) {\r\n                this.isDraggingOverDropZone = false;\r\n                this.onFileLeave.emit(event);\r\n            }\r\n            this.preventAndStop(event);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.dropFiles = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        if (!this.isDropzoneDisabled()) {\r\n            this.isDraggingOverDropZone = false;\r\n            if (event.dataTransfer) {\r\n                event.dataTransfer.dropEffect = 'copy';\r\n                /** @type {?} */\r\n                var items = void 0;\r\n                if (event.dataTransfer.items) {\r\n                    items = event.dataTransfer.items;\r\n                }\r\n                else {\r\n                    items = event.dataTransfer.files;\r\n                }\r\n                this.preventAndStop(event);\r\n                this.checkFiles(items);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Processes the change event of the file input and adds the given files.\r\n     * @param Event event\r\n     */\r\n    /**\r\n     * Processes the change event of the file input and adds the given files.\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.uploadFiles = /**\r\n     * Processes the change event of the file input and adds the given files.\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        if (!this.isDropzoneDisabled()) {\r\n            if (event.target) {\r\n                /** @type {?} */\r\n                var items = ((/** @type {?} */ (event.target))).files || ((/** @type {?} */ ([])));\r\n                this.checkFiles(items);\r\n                this.resetFileInput();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} items\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.checkFiles = /**\r\n     * @private\r\n     * @param {?} items\r\n     * @return {?}\r\n     */\r\n    function (items) {\r\n        var _this = this;\r\n        var _loop_1 = function (i) {\r\n            /** @type {?} */\r\n            var item = items[i];\r\n            /** @type {?} */\r\n            var entry = null;\r\n            if (this_1.canGetAsEntry(item)) {\r\n                entry = item.webkitGetAsEntry();\r\n            }\r\n            if (!entry) {\r\n                if (item) {\r\n                    /** @type {?} */\r\n                    var fakeFileEntry = {\r\n                        name: ((/** @type {?} */ (item))).name,\r\n                        isDirectory: false,\r\n                        isFile: true,\r\n                        file: (/**\r\n                         * @param {?} callback\r\n                         * @return {?}\r\n                         */\r\n                        function (callback) {\r\n                            callback((/** @type {?} */ (item)));\r\n                        }),\r\n                    };\r\n                    /** @type {?} */\r\n                    var toUpload = new NgxFileDropEntry(fakeFileEntry.name, fakeFileEntry);\r\n                    this_1.addToQueue(toUpload);\r\n                }\r\n            }\r\n            else {\r\n                if (entry.isFile) {\r\n                    /** @type {?} */\r\n                    var toUpload = new NgxFileDropEntry(entry.name, entry);\r\n                    this_1.addToQueue(toUpload);\r\n                }\r\n                else if (entry.isDirectory) {\r\n                    this_1.traverseFileTree(entry, entry.name);\r\n                }\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < items.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n        if (this.dropEventTimerSubscription) {\r\n            this.dropEventTimerSubscription.unsubscribe();\r\n        }\r\n        this.dropEventTimerSubscription = timer(200, 200)\r\n            .subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (_this.files.length > 0 && _this.numOfActiveReadEntries === 0) {\r\n                /** @type {?} */\r\n                var files = _this.files;\r\n                _this.files = [];\r\n                _this.onFileDrop.emit(files);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} item\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.traverseFileTree = /**\r\n     * @private\r\n     * @param {?} item\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    function (item, path) {\r\n        var _this = this;\r\n        if (item.isFile) {\r\n            /** @type {?} */\r\n            var toUpload = new NgxFileDropEntry(path, item);\r\n            this.files.push(toUpload);\r\n        }\r\n        else {\r\n            path = path + '/';\r\n            /** @type {?} */\r\n            var dirReader_1 = ((/** @type {?} */ (item))).createReader();\r\n            /** @type {?} */\r\n            var entries_1 = [];\r\n            /** @type {?} */\r\n            var readEntries_1 = (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                _this.numOfActiveReadEntries++;\r\n                dirReader_1.readEntries((/**\r\n                 * @param {?} result\r\n                 * @return {?}\r\n                 */\r\n                function (result) {\r\n                    if (!result.length) {\r\n                        // add empty folders\r\n                        if (entries_1.length === 0) {\r\n                            /** @type {?} */\r\n                            var toUpload_1 = new NgxFileDropEntry(path, item);\r\n                            _this.zone.run((/**\r\n                             * @return {?}\r\n                             */\r\n                            function () {\r\n                                _this.addToQueue(toUpload_1);\r\n                            }));\r\n                        }\r\n                        else {\r\n                            var _loop_2 = function (i) {\r\n                                _this.zone.run((/**\r\n                                 * @return {?}\r\n                                 */\r\n                                function () {\r\n                                    _this.traverseFileTree(entries_1[i], path + entries_1[i].name);\r\n                                }));\r\n                            };\r\n                            for (var i = 0; i < entries_1.length; i++) {\r\n                                _loop_2(i);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // continue with the reading\r\n                        entries_1 = entries_1.concat(result);\r\n                        readEntries_1();\r\n                    }\r\n                    _this.numOfActiveReadEntries--;\r\n                }));\r\n            });\r\n            readEntries_1();\r\n        }\r\n    };\r\n    /**\r\n     * Clears any added files from the file input element so the same file can subsequently be added multiple times.\r\n     */\r\n    /**\r\n     * Clears any added files from the file input element so the same file can subsequently be added multiple times.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.resetFileInput = /**\r\n     * Clears any added files from the file input element so the same file can subsequently be added multiple times.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.fileSelector && this.fileSelector.nativeElement) {\r\n            /** @type {?} */\r\n            var fileInputEl = (/** @type {?} */ (this.fileSelector.nativeElement));\r\n            /** @type {?} */\r\n            var fileInputContainerEl = fileInputEl.parentElement;\r\n            /** @type {?} */\r\n            var helperFormEl = this.getHelperFormElement();\r\n            /** @type {?} */\r\n            var fileInputPlaceholderEl = this.getFileInputPlaceholderElement();\r\n            // Just a quick check so we do not mess up the DOM (will never happen though).\r\n            if (fileInputContainerEl !== helperFormEl) {\r\n                // Insert the form input placeholder in the DOM before the form input element.\r\n                this.renderer.insertBefore(fileInputContainerEl, fileInputPlaceholderEl, fileInputEl);\r\n                // Add the form input as child of the temporary form element, removing the form input from the DOM.\r\n                this.renderer.appendChild(helperFormEl, fileInputEl);\r\n                // Reset the form, thus clearing the input element of any files.\r\n                helperFormEl.reset();\r\n                // Add the file input back to the DOM in place of the file input placeholder element.\r\n                this.renderer.insertBefore(fileInputContainerEl, fileInputEl, fileInputPlaceholderEl);\r\n                // Remove the input placeholder from the DOM\r\n                this.renderer.removeChild(fileInputContainerEl, fileInputPlaceholderEl);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get a cached HTML form element as a helper element to clear the file input element.\r\n     */\r\n    /**\r\n     * Get a cached HTML form element as a helper element to clear the file input element.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.getHelperFormElement = /**\r\n     * Get a cached HTML form element as a helper element to clear the file input element.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.helperFormEl) {\r\n            this.helperFormEl = (/** @type {?} */ (this.renderer.createElement('form')));\r\n        }\r\n        return this.helperFormEl;\r\n    };\r\n    /**\r\n     * Get a cached HTML div element to be used as placeholder for the file input element when clearing said element.\r\n     */\r\n    /**\r\n     * Get a cached HTML div element to be used as placeholder for the file input element when clearing said element.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.getFileInputPlaceholderElement = /**\r\n     * Get a cached HTML div element to be used as placeholder for the file input element when clearing said element.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.fileInputPlaceholderEl) {\r\n            this.fileInputPlaceholderEl = (/** @type {?} */ (this.renderer.createElement('div')));\r\n        }\r\n        return this.fileInputPlaceholderEl;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.canGetAsEntry = /**\r\n     * @private\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        return !!item.webkitGetAsEntry;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.isDropzoneDisabled = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return (this.globalDraggingInProgress || this.disabled);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.addToQueue = /**\r\n     * @private\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        this.files.push(item);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    NgxFileDropComponent.prototype.preventAndStop = /**\r\n     * @private\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    };\r\n    NgxFileDropComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ngx-file-drop',\r\n                    template: \"<div [className]=\\\"dropZoneClassName\\\"\\r\\n     [class.ngx-file-drop__drop-zone--over]=\\\"isDraggingOverDropZone\\\"\\r\\n     (drop)=\\\"dropFiles($event)\\\"\\r\\n     (dragover)=\\\"onDragOver($event)\\\"\\r\\n     (dragleave)=\\\"onDragLeave($event)\\\">\\r\\n  <div [className]=\\\"contentClassName\\\">\\r\\n    <input \\r\\n      type=\\\"file\\\" \\r\\n      #fileSelector \\r\\n      [accept]=\\\"accept\\\" \\r\\n      [attr.directory]=\\\"directory || undefined\\\" \\r\\n      [attr.webkitdirectory]=\\\"directory || undefined\\\"\\r\\n      [attr.mozdirectory]=\\\"directory || undefined\\\"\\r\\n      [attr.msdirectory]=\\\"directory || undefined\\\"\\r\\n      [attr.odirectory]=\\\"directory || undefined\\\"\\r\\n      [multiple]=\\\"multiple\\\"\\r\\n      (change)=\\\"uploadFiles($event)\\\" \\r\\n      class=\\\"ngx-file-drop__file-input\\\" \\r\\n    />\\r\\n\\r\\n    <ng-template #defaultContentTemplate>\\r\\n      <div *ngIf=\\\"dropZoneLabel\\\" class=\\\"ngx-file-drop__drop-zone-label\\\">{{dropZoneLabel}}</div>\\r\\n      <div *ngIf=\\\"showBrowseBtn\\\">\\r\\n        <input type=\\\"button\\\" [className]=\\\"browseBtnClassName\\\" value=\\\"{{browseBtnLabel}}\\\" (click)=\\\"openFileSelector($event)\\\" />\\r\\n      </div>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"contentTemplate || defaultContentTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{ openFileSelector: openFileSelector }\\\">\\r\\n    </ng-template>\\r\\n  </div>\\r\\n</div>\\r\\n\",\r\n                    styles: [\".ngx-file-drop__drop-zone{height:100px;margin:auto;border:2px dotted #0782d0;border-radius:30px}.ngx-file-drop__drop-zone--over{background-color:rgba(147,147,147,.5)}.ngx-file-drop__content{display:flex;align-items:center;justify-content:center;height:100px;color:#0782d0}.ngx-file-drop__drop-zone-label{text-align:center}.ngx-file-drop__file-input{display:none}\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    NgxFileDropComponent.ctorParameters = function () { return [\r\n        { type: NgZone },\r\n        { type: Renderer2 }\r\n    ]; };\r\n    NgxFileDropComponent.propDecorators = {\r\n        accept: [{ type: Input }],\r\n        directory: [{ type: Input }],\r\n        multiple: [{ type: Input }],\r\n        dropZoneLabel: [{ type: Input }],\r\n        dropZoneClassName: [{ type: Input }],\r\n        contentClassName: [{ type: Input }],\r\n        disabled: [{ type: Input }],\r\n        showBrowseBtn: [{ type: Input }],\r\n        browseBtnClassName: [{ type: Input }],\r\n        browseBtnLabel: [{ type: Input }],\r\n        onFileDrop: [{ type: Output }],\r\n        onFileOver: [{ type: Output }],\r\n        onFileLeave: [{ type: Output }],\r\n        contentTemplate: [{ type: ContentChild, args: [NgxFileDropContentTemplateDirective, { read: TemplateRef, static: false },] }],\r\n        fileSelector: [{ type: ViewChild, args: ['fileSelector', { static: true },] }]\r\n    };\r\n    return NgxFileDropComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxFileDropModule = /** @class */ (function () {\r\n    function NgxFileDropModule() {\r\n    }\r\n    NgxFileDropModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        NgxFileDropComponent,\r\n                        NgxFileDropContentTemplateDirective,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    exports: [\r\n                        NgxFileDropComponent,\r\n                        NgxFileDropContentTemplateDirective,\r\n                    ],\r\n                    providers: [],\r\n                    bootstrap: [\r\n                        NgxFileDropComponent\r\n                    ],\r\n                },] }\r\n    ];\r\n    return NgxFileDropModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxFileDropComponent, NgxFileDropModule, NgxFileDropEntry, NgxFileDropContentTemplateDirective as ɵa };\n\n//# sourceMappingURL=ngx-file-drop.js.map","import { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function routerTransition() {\r\n\r\n    return noTransition();\r\n}\r\n\r\nexport function noTransition() {\r\n    return trigger('routerTransition', []);\r\n}\r\n\r\nexport function slideToRight() {\r\n    return trigger('routerTransition', [\r\n        state('void', style({})),\r\n        state('*', style({})),\r\n        transition(':enter', [\r\n            style({ transform: 'translateX(-100%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n        ]),\r\n        transition(':leave', [\r\n            style({ transform: 'translateX(0%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateX(100%)' }))\r\n        ])\r\n    ]);\r\n}\r\n\r\nexport function slideToLeft() {\r\n    return trigger('routerTransition', [\r\n        state('void', style({})),\r\n        state('*', style({})),\r\n        transition(':enter', [\r\n            style({ transform: 'translateX(100%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n        ]),\r\n        transition(':leave', [\r\n            style({ transform: 'translateX(0%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateX(-100%)' }))\r\n        ])\r\n    ]);\r\n}\r\n\r\nexport function slideToBottom() {\r\n    return trigger('routerTransition', [\r\n        state('void', style({})),\r\n        state('*', style({})),\r\n        transition(':enter', [\r\n            style({ transform: 'translateY(-100%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateY(0%)' }))\r\n        ]),\r\n        transition(':leave', [\r\n            style({ transform: 'translateY(0%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateY(100%)' }))\r\n        ])\r\n    ]);\r\n}\r\n\r\nexport function slideToTop() {\r\n    return trigger('routerTransition', [\r\n        state('void', style({})),\r\n        state('*', style({})),\r\n        transition(':enter', [\r\n            style({ transform: 'translateY(100%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateY(0%)' }))\r\n        ]),\r\n        transition(':leave', [\r\n            style({ transform: 'translateY(0%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateY(-100%)' }))\r\n        ])\r\n    ]);\r\n}\r\n"],"sourceRoot":""}