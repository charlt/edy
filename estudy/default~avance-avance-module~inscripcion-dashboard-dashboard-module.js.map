{"version":3,"sources":["webpack:///./node_modules/angular-svg-round-progressbar/dist/index.js","webpack:///./node_modules/angular-svg-round-progressbar/dist/round-progress.component.js","webpack:///./node_modules/angular-svg-round-progressbar/dist/round-progress.config.js","webpack:///./node_modules/angular-svg-round-progressbar/dist/round-progress.ease.js","webpack:///./node_modules/angular-svg-round-progressbar/dist/round-progress.service.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,iCAAiC,mBAAO,CAAC,iHAA4B;AACrE,4BAA4B,mBAAO,CAAC,uGAAuB;AAC3D,8BAA8B,mBAAO,CAAC,2GAAyB;AAC/D,+BAA+B,mBAAO,CAAC,6GAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,SAAS,mBAAO,CAAC,iHAA4B;AAC7C,SAAS,mBAAO,CAAC,6GAA0B;AAC3C,SAAS,mBAAO,CAAC,uGAAuB;AACxC,SAAS,mBAAO,CAAC,2GAAyB;AAC1C,iC;;;;;;;;;;;;ACjCa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,+BAA+B,mBAAO,CAAC,6GAA0B;AACjE,8BAA8B,mBAAO,CAAC,2GAAyB;AAC/D,4BAA4B,mBAAO,CAAC,uGAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,mCAAmC,uBAAuB,2BAA2B,yBAAyB,OAAO,0BAA0B,oBAAoB,6BAA6B,OAAO,gCAAgC,2BAA2B,oBAAoB,qBAAqB,eAAe,gBAAgB,OAAO;AACjV,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,oD;;;;;;;;;;;;AChOa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;ACtBa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpaAAa;AACxC;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF,oBAAoB;AACpB;AACA;AACA;AACA,+C;;;;;;;;;;;;AC/Oa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kD","file":"default~avance-avance-module~inscripcion-dashboard-dashboard-module.js","sourcesContent":["\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar round_progress_component_1 = require(\"./round-progress.component\");\r\nvar round_progress_ease_1 = require(\"./round-progress.ease\");\r\nvar round_progress_config_1 = require(\"./round-progress.config\");\r\nvar round_progress_service_1 = require(\"./round-progress.service\");\r\nvar RoundProgressModule = /** @class */ (function () {\r\n    function RoundProgressModule() {\r\n    }\r\n    RoundProgressModule = __decorate([\r\n        core_1.NgModule({\r\n            declarations: [round_progress_component_1.RoundProgressComponent],\r\n            exports: [round_progress_component_1.RoundProgressComponent],\r\n            providers: [round_progress_service_1.RoundProgressService, round_progress_ease_1.RoundProgressEase, round_progress_config_1.ROUND_PROGRESS_DEFAULTS_PROVIDER]\r\n        })\r\n    ], RoundProgressModule);\r\n    return RoundProgressModule;\r\n}());\r\nexports.RoundProgressModule = RoundProgressModule;\r\n__export(require(\"./round-progress.component\"));\r\n__export(require(\"./round-progress.service\"));\r\n__export(require(\"./round-progress.ease\"));\r\n__export(require(\"./round-progress.config\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar round_progress_service_1 = require(\"./round-progress.service\");\r\nvar round_progress_config_1 = require(\"./round-progress.config\");\r\nvar round_progress_ease_1 = require(\"./round-progress.ease\");\r\nvar RoundProgressComponent = /** @class */ (function () {\r\n    function RoundProgressComponent(_service, _easing, _defaults, _ngZone) {\r\n        this._service = _service;\r\n        this._easing = _easing;\r\n        this._defaults = _defaults;\r\n        this._ngZone = _ngZone;\r\n        /** Radius of the circle. */\r\n        this.radius = this._defaults.radius;\r\n        /** Name of the easing function to use when animating. */\r\n        this.animation = this._defaults.animation;\r\n        /** Time in millisconds by which to delay the animation. */\r\n        this.animationDelay = this._defaults.animationDelay;\r\n        /** Duration of the animation. */\r\n        this.duration = this._defaults.duration;\r\n        /** Width of the circle's stroke. */\r\n        this.stroke = this._defaults.stroke;\r\n        /** Color of the circle. */\r\n        this.color = this._defaults.color;\r\n        /** Background color of the circle. */\r\n        this.background = this._defaults.background;\r\n        /** Whether the circle should take up the width of its parent. */\r\n        this.responsive = this._defaults.responsive;\r\n        /** Whether the circle is filling up clockwise. */\r\n        this.clockwise = this._defaults.clockwise;\r\n        /** Whether to render a semicircle. */\r\n        this.semicircle = this._defaults.semicircle;\r\n        /** Whether the tip of the progress should be rounded off. */\r\n        this.rounded = this._defaults.rounded;\r\n        /** Emits when a new value has been rendered. */\r\n        this.onRender = new core_1.EventEmitter();\r\n        this._lastAnimationId = 0;\r\n    }\r\n    /** Animates a change in the current value. */\r\n    RoundProgressComponent.prototype._animateChange = function (from, to) {\r\n        var _this = this;\r\n        if (typeof from !== 'number') {\r\n            from = 0;\r\n        }\r\n        to = this._clamp(to);\r\n        from = this._clamp(from);\r\n        var self = this;\r\n        var changeInValue = to - from;\r\n        var duration = self.duration;\r\n        // Avoid firing change detection for each of the animation frames.\r\n        self._ngZone.runOutsideAngular(function () {\r\n            var start = function () {\r\n                var startTime = self._service.getTimestamp();\r\n                var id = ++self._lastAnimationId;\r\n                requestAnimationFrame(function animation() {\r\n                    var currentTime = Math.min(self._service.getTimestamp() - startTime, duration);\r\n                    var value = self._easing[self.animation](currentTime, from, changeInValue, duration);\r\n                    self._setPath(value);\r\n                    self.onRender.emit(value);\r\n                    if (id === self._lastAnimationId && currentTime < duration) {\r\n                        requestAnimationFrame(animation);\r\n                    }\r\n                });\r\n            };\r\n            if (_this.animationDelay > 0) {\r\n                setTimeout(start, _this.animationDelay);\r\n            }\r\n            else {\r\n                start();\r\n            }\r\n        });\r\n    };\r\n    /** Sets the path dimensions. */\r\n    RoundProgressComponent.prototype._setPath = function (value) {\r\n        if (this._path) {\r\n            var arc = this._service.getArc(value, this.max, this.radius - this.stroke / 2, this.radius, this.semicircle);\r\n            this._path.nativeElement.setAttribute('d', arc);\r\n        }\r\n    };\r\n    /** Clamps a value between the maximum and 0. */\r\n    RoundProgressComponent.prototype._clamp = function (value) {\r\n        return Math.max(0, Math.min(value || 0, this.max));\r\n    };\r\n    /** Determines the SVG transforms for the <path> node. */\r\n    RoundProgressComponent.prototype.getPathTransform = function () {\r\n        var diameter = this._getDiameter();\r\n        if (this.semicircle) {\r\n            return this.clockwise ?\r\n                \"translate(0, \" + diameter + \") rotate(-90)\" :\r\n                \"translate(\" + (diameter + ',' + diameter) + \") rotate(90) scale(-1, 1)\";\r\n        }\r\n        else if (!this.clockwise) {\r\n            return \"scale(-1, 1) translate(-\" + diameter + \" 0)\";\r\n        }\r\n    };\r\n    /** Resolves a color through the service. */\r\n    RoundProgressComponent.prototype.resolveColor = function (color) {\r\n        return this._service.resolveColor(color);\r\n    };\r\n    /** Change detection callback. */\r\n    RoundProgressComponent.prototype.ngOnChanges = function (changes) {\r\n        if (changes.current) {\r\n            this._animateChange(changes.current.previousValue, changes.current.currentValue);\r\n        }\r\n        else {\r\n            this._setPath(this.current);\r\n        }\r\n    };\r\n    /** Diameter of the circle. */\r\n    RoundProgressComponent.prototype._getDiameter = function () {\r\n        return this.radius * 2;\r\n    };\r\n    /** The CSS height of the wrapper element. */\r\n    RoundProgressComponent.prototype._getElementHeight = function () {\r\n        if (!this.responsive) {\r\n            return (this.semicircle ? this.radius : this._getDiameter()) + 'px';\r\n        }\r\n    };\r\n    /** Viewbox for the SVG element. */\r\n    RoundProgressComponent.prototype._getViewBox = function () {\r\n        var diameter = this._getDiameter();\r\n        return \"0 0 \" + diameter + \" \" + (this.semicircle ? this.radius : diameter);\r\n    };\r\n    /** Bottom padding for the wrapper element. */\r\n    RoundProgressComponent.prototype._getPaddingBottom = function () {\r\n        if (this.responsive) {\r\n            return this.semicircle ? '50%' : '100%';\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.ViewChild('path', { static: false }),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], RoundProgressComponent.prototype, \"_path\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], RoundProgressComponent.prototype, \"current\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], RoundProgressComponent.prototype, \"max\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], RoundProgressComponent.prototype, \"radius\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], RoundProgressComponent.prototype, \"animation\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], RoundProgressComponent.prototype, \"animationDelay\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], RoundProgressComponent.prototype, \"duration\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], RoundProgressComponent.prototype, \"stroke\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], RoundProgressComponent.prototype, \"color\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], RoundProgressComponent.prototype, \"background\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], RoundProgressComponent.prototype, \"responsive\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], RoundProgressComponent.prototype, \"clockwise\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], RoundProgressComponent.prototype, \"semicircle\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], RoundProgressComponent.prototype, \"rounded\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], RoundProgressComponent.prototype, \"onRender\", void 0);\r\n    RoundProgressComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'round-progress',\r\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush,\r\n            template: \"\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" [attr.viewBox]=\\\"_getViewBox()\\\">\\n      <circle\\n        fill=\\\"none\\\"\\n        [attr.cx]=\\\"radius\\\"\\n        [attr.cy]=\\\"radius\\\"\\n        [attr.r]=\\\"radius - stroke / 2\\\"\\n        [style.stroke]=\\\"resolveColor(background)\\\"\\n        [style.stroke-width]=\\\"stroke\\\"/>\\n\\n      <path\\n        #path\\n        fill=\\\"none\\\"\\n        [style.stroke-width]=\\\"stroke\\\"\\n        [style.stroke]=\\\"resolveColor(color)\\\"\\n        [style.stroke-linecap]=\\\"rounded ? 'round' : ''\\\"\\n        [attr.transform]=\\\"getPathTransform()\\\"/>\\n    </svg>\\n  \",\r\n            host: {\r\n                'role': 'progressbar',\r\n                '[attr.aria-valuemin]': 'current',\r\n                '[attr.aria-valuemax]': 'max',\r\n                '[style.width]': \"responsive ? '' : _getDiameter() + 'px'\",\r\n                '[style.height]': '_getElementHeight()',\r\n                '[style.padding-bottom]': '_getPaddingBottom()',\r\n                '[class.responsive]': 'responsive'\r\n            },\r\n            styles: [\"\\n    :host {\\n      display: block;\\n      position: relative;\\n      overflow: hidden;\\n    }\\n    :host(.responsive) {\\n      width: 100%;\\n      padding-bottom: 100%;\\n    }\\n    :host(.responsive) > svg {\\n      position: absolute;\\n      width: 100%;\\n      height: 100%;\\n      top: 0;\\n      left: 0;\\n    }\\n  \"]\r\n        }),\r\n        __param(2, core_1.Inject(round_progress_config_1.ROUND_PROGRESS_DEFAULTS)),\r\n        __metadata(\"design:paramtypes\", [round_progress_service_1.RoundProgressService,\r\n            round_progress_ease_1.RoundProgressEase, Object, core_1.NgZone])\r\n    ], RoundProgressComponent);\r\n    return RoundProgressComponent;\r\n}());\r\nexports.RoundProgressComponent = RoundProgressComponent;\r\n//# sourceMappingURL=round-progress.component.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nexports.ROUND_PROGRESS_DEFAULTS = new core_1.InjectionToken('ROUND_PROGRESS_DEFAULTS');\r\nvar ɵ0 = {\r\n    radius: 125,\r\n    animation: 'easeOutCubic',\r\n    animationDelay: null,\r\n    duration: 500,\r\n    stroke: 15,\r\n    color: '#45CCCE',\r\n    background: '#EAEAEA',\r\n    responsive: false,\r\n    clockwise: true,\r\n    semicircle: false,\r\n    rounded: false\r\n};\r\nexports.ɵ0 = ɵ0;\r\nexports.ROUND_PROGRESS_DEFAULTS_PROVIDER = {\r\n    provide: exports.ROUND_PROGRESS_DEFAULTS,\r\n    useValue: ɵ0\r\n};\r\n//# sourceMappingURL=round-progress.config.js.map","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar RoundProgressEase = /** @class */ (function () {\r\n    function RoundProgressEase() {\r\n    }\r\n    // t: current time (or position) of the neonate. This can be seconds or frames, steps,\r\n    // seconds, ms, whatever – as long as the unit is the same as is used for the total time.\r\n    // b: beginning value of the property.\r\n    // c: change between the beginning and destination value of the property.\r\n    // d: total time of the neonate.\r\n    RoundProgressEase.prototype.linearEase = function (t, b, c, d) {\r\n        return c * t / d + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInQuad = function (t, b, c, d) {\r\n        return c * (t /= d) * t + b;\r\n    };\r\n    RoundProgressEase.prototype.easeOutQuad = function (t, b, c, d) {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInOutQuad = function (t, b, c, d) {\r\n        if ((t /= d / 2) < 1) {\r\n            return c / 2 * t * t + b;\r\n        }\r\n        return -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInCubic = function (t, b, c, d) {\r\n        return c * (t /= d) * t * t + b;\r\n    };\r\n    RoundProgressEase.prototype.easeOutCubic = function (t, b, c, d) {\r\n        return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInOutCubic = function (t, b, c, d) {\r\n        if ((t /= d / 2) < 1) {\r\n            return c / 2 * t * t * t + b;\r\n        }\r\n        return c / 2 * ((t -= 2) * t * t + 2) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInQuart = function (t, b, c, d) {\r\n        return c * (t /= d) * t * t * t + b;\r\n    };\r\n    RoundProgressEase.prototype.easeOutQuart = function (t, b, c, d) {\r\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInOutQuart = function (t, b, c, d) {\r\n        if ((t /= d / 2) < 1) {\r\n            return c / 2 * t * t * t * t + b;\r\n        }\r\n        return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInQuint = function (t, b, c, d) {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    };\r\n    RoundProgressEase.prototype.easeOutQuint = function (t, b, c, d) {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInOutQuint = function (t, b, c, d) {\r\n        if ((t /= d / 2) < 1) {\r\n            return c / 2 * t * t * t * t * t + b;\r\n        }\r\n        return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInSine = function (t, b, c, d) {\r\n        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n    };\r\n    RoundProgressEase.prototype.easeOutSine = function (t, b, c, d) {\r\n        return c * Math.sin(t / d * (Math.PI / 2)) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInOutSine = function (t, b, c, d) {\r\n        return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInExpo = function (t, b, c, d) {\r\n        return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeOutExpo = function (t, b, c, d) {\r\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInOutExpo = function (t, b, c, d) {\r\n        if (t == 0) {\r\n            return b;\r\n        }\r\n        if (t == d) {\r\n            return b + c;\r\n        }\r\n        if ((t /= d / 2) < 1) {\r\n            return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n        }\r\n        return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInCirc = function (t, b, c, d) {\r\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeOutCirc = function (t, b, c, d) {\r\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInOutCirc = function (t, b, c, d) {\r\n        if ((t /= d / 2) < 1) {\r\n            return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\r\n        }\r\n        return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInElastic = function (t, b, c, d) {\r\n        var s = 1.70158;\r\n        var p = d * 0.3;\r\n        var a = c;\r\n        if (t == 0) {\r\n            return b;\r\n        }\r\n        if ((t /= d) == 1) {\r\n            return b + c;\r\n        }\r\n        if (a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = p / (2 * Math.PI) * Math.asin(c / a);\r\n        }\r\n        return -(a * Math.pow(2, 10 * (t--)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeOutElastic = function (t, b, c, d) {\r\n        var s = 1.70158;\r\n        var p = d * 0.3;\r\n        var a = c;\r\n        if (t == 0) {\r\n            return b;\r\n        }\r\n        if ((t /= d) == 1) {\r\n            return b + c;\r\n        }\r\n        if (a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = p / (2 * Math.PI) * Math.asin(c / a);\r\n        }\r\n        return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInOutElastic = function (t, b, c, d) {\r\n        var s = 1.70158;\r\n        var p = d * (0.3 * 1.5);\r\n        var a = c;\r\n        if (t == 0) {\r\n            return b;\r\n        }\r\n        if ((t /= d / 2) == 2) {\r\n            return b + c;\r\n        }\r\n        if (a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = p / (2 * Math.PI) * Math.asin(c / a);\r\n        }\r\n        if (t < 1) {\r\n            return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) *\r\n                Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n        }\r\n        return a * Math.pow(2, -10 * (t -= 1)) *\r\n            Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInBack = function (t, b, c, d, s) {\r\n        if (s === void 0) { s = 1.70158; }\r\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeOutBack = function (t, b, c, d, s) {\r\n        if (s === void 0) { s = 1.70158; }\r\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInOutBack = function (t, b, c, d, s) {\r\n        if (s === void 0) { s = 1.70158; }\r\n        if ((t /= d / 2) < 1) {\r\n            return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\r\n        }\r\n        return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInBounce = function (t, b, c, d) {\r\n        return c - this.easeOutBounce(d - t, 0, c, d) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeOutBounce = function (t, b, c, d) {\r\n        if ((t /= d) < (1 / 2.75)) {\r\n            return c * (7.5625 * t * t) + b;\r\n        }\r\n        else if (t < (2 / 2.75)) {\r\n            return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\r\n        }\r\n        else if (t < (2.5 / 2.75)) {\r\n            return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\r\n        }\r\n        return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\r\n    };\r\n    RoundProgressEase.prototype.easeInOutBounce = function (t, b, c, d) {\r\n        if (t < d / 2) {\r\n            return this.easeInBounce(t * 2, 0, c, d) * 0.5 + b;\r\n        }\r\n        return this.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\r\n    };\r\n    RoundProgressEase = __decorate([\r\n        core_1.Injectable()\r\n    ], RoundProgressEase);\r\n    return RoundProgressEase;\r\n}());\r\nexports.RoundProgressEase = RoundProgressEase;\r\n/**\r\n * TERMS OF USE - EASING EQUATIONS\r\n * Open source under the BSD License.\r\n\r\n * Copyright © 2001 Robert Penner\r\n * All rights reserved.\r\n * Redistribution and use in source and binary forms, with or without modification, are permitted\r\n * provided that the following conditions are met:\r\n\r\n * Redistributions of source code must retain the above copyright notice, this list of conditions\r\n * and the following disclaimer.\r\n *\r\n * Redistributions in binary form must reproduce the above copyright notice, this list of conditions\r\n * and the following disclaimer in the documentation and/or other materials provided with the\r\n * distribution.\r\n *\r\n * Neither the name of the author nor the names of contributors may be used to endorse or promote\r\n * products derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\r\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\r\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\r\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n//# sourceMappingURL=round-progress.ease.js.map","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar DEGREE_IN_RADIANS = Math.PI / 180;\r\nvar RoundProgressService = /** @class */ (function () {\r\n    function RoundProgressService(document) {\r\n        this.supportsSvg = !!(document &&\r\n            document.createElementNS &&\r\n            document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\r\n        this._base = document && document.head.querySelector('base');\r\n        this._hasPerf = typeof window !== 'undefined' &&\r\n            window.performance &&\r\n            window.performance.now &&\r\n            typeof window.performance.now() === 'number';\r\n    }\r\n    /**\r\n     * Resolves a SVG color against the page's `base` tag.\r\n     */\r\n    RoundProgressService.prototype.resolveColor = function (color) {\r\n        if (this._base && this._base.href) {\r\n            var hashIndex = color.indexOf('#');\r\n            if (hashIndex > -1 && color.indexOf('url') > -1) {\r\n                return color.slice(0, hashIndex) + location.href + color.slice(hashIndex);\r\n            }\r\n        }\r\n        return color;\r\n    };\r\n    /**\r\n     * Generates a timestamp.\r\n     */\r\n    RoundProgressService.prototype.getTimestamp = function () {\r\n        return this._hasPerf ? window.performance.now() : Date.now();\r\n    };\r\n    /**\r\n     * Generates the value for an SVG arc.\r\n     * @param current       Current value.\r\n     * @param total         Maximum value.\r\n     * @param pathRadius    Radius of the SVG path.\r\n     * @param elementRadius Radius of the SVG container.\r\n     * @param isSemicircle  Whether the element should be a semicircle.\r\n     */\r\n    RoundProgressService.prototype.getArc = function (current, total, pathRadius, elementRadius, isSemicircle) {\r\n        if (isSemicircle === void 0) { isSemicircle = false; }\r\n        var value = Math.max(0, Math.min(current || 0, total));\r\n        var maxAngle = isSemicircle ? 180 : 359.9999;\r\n        var percentage = total === 0 ? maxAngle : (value / total) * maxAngle;\r\n        var start = this._polarToCartesian(elementRadius, pathRadius, percentage);\r\n        var end = this._polarToCartesian(elementRadius, pathRadius, 0);\r\n        var arcSweep = (percentage <= 180 ? 0 : 1);\r\n        return \"M \" + start + \" A \" + pathRadius + \" \" + pathRadius + \" 0 \" + arcSweep + \" 0 \" + end;\r\n    };\r\n    /**\r\n     * Converts polar cooradinates to Cartesian.\r\n     * @param elementRadius  Radius of the wrapper element.\r\n     * @param pathRadius     Radius of the path being described.\r\n     * @param angleInDegrees Degree to be converted.\r\n     */\r\n    RoundProgressService.prototype._polarToCartesian = function (elementRadius, pathRadius, angleInDegrees) {\r\n        var angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\r\n        var x = elementRadius + (pathRadius * Math.cos(angleInRadians));\r\n        var y = elementRadius + (pathRadius * Math.sin(angleInRadians));\r\n        return x + ' ' + y;\r\n    };\r\n    RoundProgressService = __decorate([\r\n        core_1.Injectable(),\r\n        __param(0, core_1.Optional()), __param(0, core_1.Inject(common_1.DOCUMENT)),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], RoundProgressService);\r\n    return RoundProgressService;\r\n}());\r\nexports.RoundProgressService = RoundProgressService;\r\n//# sourceMappingURL=round-progress.service.js.map"],"sourceRoot":""}